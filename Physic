--  â˜…  BallServerFix.lua
--  Parent: EITHER the MeshPart itself OR the Model that contains the MeshPart

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

local KICK_EVENT = ReplicatedStorage:WaitForChild("KickBallEvent")

----------------------------------------------------------------
-- Locate the actual physics part ("ballPart")
----------------------------------------------------------------
local function getBallPart(container)
	if container:IsA("BasePart") then
		return container
	else
		return container:FindFirstChildWhichIsA("BasePart") or error("No BasePart found in football")
	end
end

local ballPart = getBallPart(script.Parent)
ballPart.Anchored = false
ballPart.CanCollide, ballPart.CanTouch = true, true

----------------------------------------------------------------
-- Tunables
----------------------------------------------------------------
local ATTACH_DISTANCE = 6          -- studs
local KICK_POWER      = 65         -- impulse strength
local UPWARD_BOOST    = 18         -- extra Y impulse

----------------------------------------------------------------
-- Attach / detach helpers
----------------------------------------------------------------
local function attachToPlayer(plr)
	if ballPart:GetAttribute("Holder") ~= nil then return end

	local char = plr.Character
	if not char then return end
	local root = char:FindFirstChild("HumanoidRootPart")
	if not root then return end

	-- Weld
	local weld = Instance.new("WeldConstraint")
	weld.Name, weld.Part0, weld.Part1 = "BallWeld", ballPart, root
	weld.Parent = ballPart

	ballPart:SetNetworkOwner(plr)
	ballPart.AssemblyLinearVelocity = Vector3.zero
	ballPart.CanCollide = false
	ballPart:SetAttribute("Holder", plr.UserId)
end

local function kick(plr)
	if ballPart:GetAttribute("Holder") ~= plr.UserId then return end

	local char = plr.Character
	local root = char and char:FindFirstChild("HumanoidRootPart")
	if not root then return end

	local weld = ballPart:FindFirstChild("BallWeld")
	if weld then weld:Destroy() end

	ballPart.CanCollide = true
	ballPart:SetAttribute("Holder", nil)
	ballPart:SetNetworkOwnershipAuto()

	local impulse = (root.CFrame.LookVector * KICK_POWER + Vector3.new(0, UPWARD_BOOST, 0))
	ballPart:ApplyImpulse(impulse * ballPart.AssemblyMass)
end

----------------------------------------------------------------
-- 1) Auto-pickup when *any* limb touches the ball
----------------------------------------------------------------
ballPart.Touched:Connect(function(hit)
	local plr = Players:GetPlayerFromCharacter(hit.Parent)
	if not plr then return end
	attachToPlayer(plr)
end)

----------------------------------------------------------------
-- 2) Extra safety: every 0.2 s look for nearby players
--    (covers rare cases where .Touched is missed or disabled)
----------------------------------------------------------------
RunService.Heartbeat:Connect(function()
	if ballPart:GetAttribute("Holder") then return end  -- already held
	for _, plr in ipairs(Players:GetPlayers()) do
		local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
		if root and (root.Position - ballPart.Position).Magnitude <= ATTACH_DISTANCE then
			attachToPlayer(plr)
			break
		end
	end
end)

----------------------------------------------------------------
-- 3) RemoteEvent: player pressed X
----------------------------------------------------------------
KICK_EVENT.OnServerEvent:Connect(kick)

----------------------------------------------------------------
-- 4) Clean up if the holder leaves
----------------------------------------------------------------
Players.PlayerRemoving:Connect(function(plr)
	if ballPart:GetAttribute("Holder") == plr.UserId then
		kick(plr)
	end
end)
